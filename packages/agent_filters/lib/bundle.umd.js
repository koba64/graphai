!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("ajv"),require("graphai"),require("@noble/hashes/sha2")):"function"==typeof define&&define.amd?define(["exports","ajv","graphai","@noble/hashes/sha2"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).graphai_agent_filters={},e.Ajv,e.graphai,e.sha2)}(this,(function(e,t,a,n){"use strict";const r=(e,a)=>{if(!(new t).compile(e)(a))throw new Error("schema not matched");return!0};const s=async(e,t,a,n)=>{const r=async function*(e,t){const{params:a,namedInputs:n,debugInfo:r,filterParams:s}=t,o={params:a,debugInfo:r,filterParams:s,namedInputs:n},i=await fetch(e,{headers:{"Content-Type":"text/event-stream"},method:"POST",body:JSON.stringify(o)}),c=i.body?.getReader();if(200!==i.status||!c)throw new Error("Request failed");const u=new TextDecoder("utf-8");let d=!1;for(;!d;){const{done:e,value:t}=await c.read();if(e)d=e,c.releaseLock();else{const e=u.decode(t,{stream:!0});yield e}}}(t,a),s=[];for await(const t of r)n&&console.log(t),t&&(s.push(t),-1===s.join("").indexOf("___END___")&&e.filterParams.streamTokenCallback&&e.filterParams.streamTokenCallback(t));const o=s.join("").split("___END___")[1];return JSON.parse(o)},o=e=>Array.isArray(e)?e.map((e=>o(e))):a.isObject(e)?Object.keys(e).sort().reduce(((t,a)=>(t[a]=e[a],t)),{}):e,i=e=>{const{namedInputs:t,params:a,debugInfo:r}=e,{agentId:s}=r,i=n.sha256(JSON.stringify(o({namedInputs:t,params:a,agentId:s})));return btoa(String.fromCharCode(...i))};e.agentFilterRunnerBuilder=e=>{const t=e;return(e,a)=>{let n=0;const r=e=>{const s=t[n++];return s?s.agent(e,r):a(e)};return r(e)}},e.agentInputValidator=r,e.cacheAgentFilterGenerator=e=>{const{getCache:t,setCache:a,getCacheKey:n}=e;return async(e,r)=>{if("pureAgent"===e.cacheType){const s=n?n(e):i(e),o=await t(s);if(o)return o;const c=await r(e);return await a(s,c),c}return"impureAgent"===e.cacheType&&(e.filterParams.cache={getCache:t,setCache:a,getCacheKey:i}),r(e)}},e.httpAgentFilter=async(e,t)=>{const{params:a,debugInfo:n,filterParams:r,namedInputs:o}=e;if(r?.server){const{baseUrl:t,isDebug:i,serverAgentUrlDictionary:c}=r.server,u=n.agentId,d=void 0!==r.streamTokenCallback,l=c&&u&&c[u]?c[u]:[t,u].join("/");void 0===l&&console.log("httpAgentFilter: Url is not defined");const f={params:a,debugInfo:n,filterParams:r,namedInputs:o,inputs:o};return d?await s(e,l,f,i):await(async(e,t)=>{const a=await fetch(e,{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return await a.json()})(l,f)}return t(e)},e.namedInputValidatorFilter=async(e,t)=>{const{inputSchema:a,namedInputs:n}=e;return a&&"array"!==a.type&&r(a,n||{}),t(e)},e.sortObjectKeys=o,e.streamAgentFilterGenerator=e=>async(t,a)=>(t.debugInfo.isResult&&(t.filterParams.streamTokenCallback=a=>{e(t,a)}),a(t))}));
//# sourceMappingURL=bundle.umd.js.map
